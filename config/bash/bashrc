#!/bin/bash

HOSTIP="localhost"
HISTSIZE=
HISTFILESIZE=

# aliases
alias ls='eza'
alias sb="source ~/.bashrc"
alias jqv="pbpaste | jq"
alias bp="pbpaste | base64 -d"
alias ts="~/.scripts/tmux-session-manager"

alias kl='kitty @ set-colors --all --configured ~/.config/kitty/kitty-themes/gruvbox_light.conf'
alias kd='kitty @ set-colors --all --configured ~/.config/kitty/kitty-themes/gruvbox_dark.conf'
alias gitcc='git rev-parse HEAD | pbcopy'


# MAC stuff
if [[ $(uname -o) = "Darwin"  ]]; then
    export PATH=$PATH:/opt/homebrew/bin
	#export ANDROID_SDK_ROOT="/opt/homebrew/share/android-commandlinetools"
	export ANDROID_HOME=$HOME/Library/Android/sdk
	export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin
	export PATH=$PATH:$ANDROID_HOME/platform-tools
	export PATH=$PATH:$ANDROID_HOME/emulator

    # AM Team stuff
    [[ -f ~/am.sh ]] && source ~/am.sh
fi

# Shell Prompt
trimPWD()
{
    trimmed_PWD=""
    if [ $(echo $PWD | grep -c $HOME ) -eq 1 ]; then
        trimmed_PWD=$(echo $PWD | sed "s|$HOME|/~|g")
        # shorten if pwd is to long
        if [ $( echo $trimmed_PWD | wc -m ) -gt 119 ]; then
            trimmed_PWD=$(echo $trimmed_PWD | awk -F "/" '{print $1"/"$2"/"$3 "/.../" $NF}')
        fi
        echo $trimmed_PWD
    else
        echo $PWD
    fi
}
export PS1="┌─[\u \$(trimPWD)]\n└──$ "

jqve() {
    pbpaste | sed -e 's/\\//g' | jq
}

gittag() {
    tag=$1
    git tag -d $tag
    git push origin :refs/tags/$tag
    git tag $tag
    git push && git push origin refs/tags/$tag
}

go_update_deps() {
    git checkout main || git checkout master &&\
        git pull &&\
        git checkout -b "noprod-US72527-update-gomod" &&\
        go mod edit -go=1.19 &&\
        go mod tidy &&\
        [[ ! -d "integration" ]] || go fix --tags="integration" ./integration &&\
        go get -u -t ./... &&\
        go mod tidy &&\
        git commit -am "update" &&\
        git push --set-upstream origin noprod-US72527-update-gomod
}

# vim exports
export MYVIMRC="$HOME/.vimrc"
export MYVIMSESSIONS="$HOME/.vim/sessions"

export GOPATH=~/go/bin

# NVM settings
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

if [ -f "$HOME/.bash-git-prompt/gitprompt.sh" ]; then
    GIT_PROMPT_ONLY_IN_REPO=1
    source $HOME/.bash-git-prompt/gitprompt.sh
fi

[ -f ~/.fzf.bash ] && source ~/.fzf.bash

# OCaml
which opam && eval $(opam env)
